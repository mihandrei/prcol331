package pcol.server.domain;

// Generated May 15, 2011 7:09:00 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SchemaNotare generated by hbm2java
 */
@Entity
@Table(name = "schema_notare", catalog = "proj_col")
public class SchemaNotare implements java.io.Serializable {

	private Integer id;
	private CurCourse curCourse;
	private String label;
	private int pondere;
	private Set<NotePartiale> notePartiales = new HashSet<NotePartiale>(0);

	public SchemaNotare() {
	}

	public SchemaNotare(CurCourse curCourse, String label, int pondere) {
		this.curCourse = curCourse;
		this.label = label;
		this.pondere = pondere;
	}

	public SchemaNotare(CurCourse curCourse, String label, int pondere,
			Set<NotePartiale> notePartiales) {
		this.curCourse = curCourse;
		this.label = label;
		this.pondere = pondere;
		this.notePartiales = notePartiales;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseId", nullable = false)
	public CurCourse getCurCourse() {
		return this.curCourse;
	}

	public void setCurCourse(CurCourse curCourse) {
		this.curCourse = curCourse;
	}

	@Column(name = "label", nullable = false, length = 45)
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Column(name = "pondere", nullable = false)
	public int getPondere() {
		return this.pondere;
	}

	public void setPondere(int pondere) {
		this.pondere = pondere;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schemaNotare")
	public Set<NotePartiale> getNotePartiales() {
		return this.notePartiales;
	}

	public void setNotePartiales(Set<NotePartiale> notePartiales) {
		this.notePartiales = notePartiales;
	}

}
