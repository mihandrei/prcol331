package pcol.server.domain;

// Generated May 15, 2011 7:09:00 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OrgGroup generated by hbm2java
 */
@Entity
@Table(name = "org_group", catalog = "proj_col")
public class OrgGroup implements java.io.Serializable {

	private Integer id;
	private OrgSection orgSection;
	private String nume;
	private Set<Studenti> studentis = new HashSet<Studenti>(0);
	private Set<Orar> orars = new HashSet<Orar>(0);

	public OrgGroup() {
	}

	public OrgGroup(OrgSection orgSection, String nume) {
		this.orgSection = orgSection;
		this.nume = nume;
	}

	public OrgGroup(OrgSection orgSection, String nume,
			Set<Studenti> studentis, Set<Orar> orars) {
		this.orgSection = orgSection;
		this.nume = nume;
		this.studentis = studentis;
		this.orars = orars;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "section", nullable = false)
	public OrgSection getOrgSection() {
		return this.orgSection;
	}

	public void setOrgSection(OrgSection orgSection) {
		this.orgSection = orgSection;
	}

	@Column(name = "nume", nullable = false, length = 45)
	public String getNume() {
		return this.nume;
	}

	public void setNume(String nume) {
		this.nume = nume;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "studenti_grupe", catalog = "proj_col", joinColumns = { @JoinColumn(name = "groupid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "nrmatr", nullable = false, updatable = false) })
	public Set<Studenti> getStudentis() {
		return this.studentis;
	}

	public void setStudentis(Set<Studenti> studentis) {
		this.studentis = studentis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orgGroup")
	public Set<Orar> getOrars() {
		return this.orars;
	}

	public void setOrars(Set<Orar> orars) {
		this.orars = orars;
	}

}
